page	left	top	code
1	149	842	> library("multipol")
1	149	859	Loading required package: abind
1	149	891	Attaching package: ’multipol’
1	149	924	The following object(s) are masked from
1	163	941	   ’package:base’:
1	176	974	    single
1	149	1007	> a <- as.multipol(array(1:12, c(2,3,2)))
1	149	1023	> a
1	149	1039	, , z^0
1	176	1072	    y^0 y^1 y^2
1	149	1089	x^0   1   3   5
1	149	1105	x^1   2   4   6
1	149	1138	, , z^1
2	176	120	    y^0 y^1 y^2
2	149	137	x^0   7   9  11
2	149	153	x^1   8  10  12
2	149	571	> a <- multipol( array(1:4, c(2,2)) )
2	149	588	> b <- multipol( array(1:8, c(2,2,2)) )
2	149	604	> a + b
2	149	620	Error: length(dima) == length(dimb) is not TRUE
2	149	637	> a * b
2	149	653	Error: length(dim(a)) == length(dim(b)) is not TRUE
2	149	722	> options(showchars = TRUE)
2	149	738	> ( a <- multipol( as.array( c("x^0" = 0, "x^1" = 1) )))
2	149	755	[1] 1*x^1
2	149	771	> ( b <- multipol( as.array( c("y^0" = 0, "y^1" = 1) )))
2	149	788	[1] 1*x^1
2	149	804	> a + b
2	149	821	[1] 2*x^1
3	149	399	> library("mpoly")
3	149	416	> termList <- list(
3	149	432	+   c(coef = 1),
3	149	449	+   c(x = 10, coef = 2),
3	149	465	+   c(x = 2, coef = 3),
3	149	481	+   c(y = 5, coef = 4),
3	149	498	+   c(x = 1, y = 1, coef = 5))
3	149	514	> termList
3	149	531	[[1]]
3	149	547	coef
3	169	564	   1
3	149	580	[[2]]
3	169	597	   x coef
3	163	613	  10    2
3	149	629	[[3]]
3	169	646	   x coef
3	169	662	   2    3
3	149	679	[[4]]
3	169	695	   y coef
3	169	712	   5    4
3	149	728	[[5]]
3	169	744	   x    y coef
3	169	761	   1    1    5
3	149	777	> poly <- mpoly(termList)
3	149	794	> class(poly)
3	149	810	[1] "mpoly"
3	149	896	> vars(poly)
3	149	912	[1] "x" "y"
3	149	979	> poly
3	149	995	1  +  2 x^10  +  3 x^2  +  4 y^5  +  5 x y
4	149	147	> print(poly, order = "lex")
4	149	163	using variable ordering - x, y
4	149	180	2 x^10   +  3 x^2   +   5 x y   +  4 y^5   +   1
4	149	196	> print(poly, order = "grlex")
4	149	213	using variable ordering - x, y
4	149	229	2 x^10   +  4 y^5   +   3 x^2   +  5 x y   +   1
4	149	246	> print(poly, order = "lex", varorder = c("y", "x"))
4	149	262	4 y^5   +  5 y x   +   2 x^10   +  3 x^2   +   1
4	149	279	> print(poly, order = "glex", varorder = c("y", "x"))
4	149	295	2 x^10   +  4 y^5   +   5 y x   +  3 x^2   +   1
4	149	365	> poly
4	149	382	1  +  2 x^10  +  3 x^2  +  4 y^5  +  5 x y
4	149	398	> (poly2 <- reorder(poly, order = "lex"))
4	149	415	using variable ordering - x, y
4	149	431	2 x^10   +  3 x^2   +   5 x y   +  4 y^5   +   1
4	149	447	> unclass(poly2)
4	149	464	[[1]]
4	169	480	   x coef
4	163	497	  10    2
4	149	513	[[2]]
4	169	530	   x coef
4	169	546	   2    3
4	149	562	[[3]]
4	169	579	   x    y coef
4	169	595	   1    1    5
4	149	612	[[4]]
4	169	628	   y coef
4	169	645	   5    4
4	149	661	[[5]]
4	149	678	coef
4	169	694	   1
4	149	837	> termList <- list( c(x = 1, coef = 1), c(x = 1, coef = 2) )
4	149	854	> mpoly(termList) # x + 2x
4	149	870	3 x
4	149	887	> termList <- list( c(x = 5, x = 2, coef = 5, coef = 6, y = 0) )
4	149	903	> mpoly(termList) # x^5 * x^2 * 5 * 6 * y^0
4	149	920	30 x^7
4	149	1023	> ( p <- mp("10 x + 2 y 3 + x^2 5 y") )
4	149	1039	10 x   +   6 y  +  5 x^2 y
4	149	1056	> is(p, "mpoly")
4	149	1072	[1] TRUE
4	149	1088	> unclass(p)
5	149	104	[[1]]
5	169	120	   x coef
5	169	137	   1   10
5	149	153	[[2]]
5	169	169	   y coef
5	169	186	   1    6
5	149	202	[[3]]
5	169	219	   x    y coef
5	169	235	   2    1    5
5	149	353	> mp("x^2 + 10 x 6 x + 10 x 6 x y y 2")
5	149	369	61 x^2   +  120 x^2 y^2
5	149	527	> a <- mp("1 + 2 x + 3 y + 4 x y")
5	149	544	> b <- mp("1 + 2 x + 3 y + 4 x y + 5 z + 6 x z + 7 y z + 8 x y z")
5	149	560	> a + b
5	149	577	2  +  4 x  +  6 y  +  8 x y  +  5 z  +  6 x z  +  7 y z  +  8 x y z
5	149	593	> b - a
5	149	609	5 z  +  6 x z  +  7 y z  +  8 x y z
5	149	626	> a * b
5	149	642	1  +  4 x  +  6 y  +  20 x y  +  5 z  + 16 x z  +  22 y z  +  60 x y z  +  4 x^2
5	156	659	 +  16 x^2 y  +  12 x^2 z  +  40 x^2 y z  +  9 y^2   +  24 x y^2  +  21 y^2 z
5	156	675	 +  52 x y^2 z  +  16 x^2 y^2  +  32 x^2 y^2 z
5	149	727	> a^2
5	149	743	1  +  4 x  +  6 y  +  20 x y  +  4 x^2  +  16 x^2 y  +  9 y^2  +  24 x y^2
5	156	760	 +  16 x^2 y^2
5	149	776	> a == b
5	149	792	[1] FALSE
5	149	809	> ( c <- mpoly(a[c(2,1,4,3)]) ) # reorder a
5	149	825	4 y x   +  3 y   +  2 x   +  1
5	149	842	> a == c
5	149	858	[1] TRUE
5	149	980	> deriv(b, "x")
5	149	996	8 y z   +  4 y   +  6 z   +  2
5	149	1013	> gradient(b)
5	149	1029	8 y z   +  4 y   +  6 z   +  2
5	149	1046	8 x z   +  4 x   +  7 z   +  3
5	149	1062	8 x y   +  6 x   +  7 y   +  5
6	149	104	> ( ps <- mp(c("x + y + z", "x + z^2")) )
6	149	120	x  +  y  +  z
6	149	137	x  +  z^2
6	149	153	> str(ps, 1)
6	149	169	List of 2
6	156	186	  $ :List of 3
6	163	202	   ..- attr(*, "class")= chr "mpoly"
6	156	219	  $ :List of 2
6	163	235	   ..- attr(*, "class")= chr "mpoly"
6	156	252	  - attr(*, "class")= chr "mpolyList"
6	149	504	> polys <- mp(c("t^4 - x", "t^3 - y", "t^2 - z"))
6	149	521	> gb <- grobner(polys)
6	149	537	using variable ordering - t, x, y, z
6	149	553	Loading required package: rJava
6	149	570	> gb
6	149	586	-1 z   +   t^2
6	149	603	t y  -  z^2
6	149	619	-1 y   +   z t
6	149	636	x  -  z^2
6	149	652	y^2  -  z^3
6	149	669	> class(gb)
6	149	685	[1] "mpolyList"
6	149	752	> polys <- mp(c("x^2 - 2 y^2", "x y - 3"))
6	149	769	> grobner(polys, varorder = c("x", "y"))
6	149	785	3 x  -  2 y^3
6	149	801	-9  +  2 y^4
6	149	818	> grobner(polys, varorder = c("x", "y"), order = "grlex")
6	149	834	-3 x   +   2 y^3
6	149	851	x^2  -  2 y^2
6	149	867	-3  +  x y
7	149	145	> library("ggplot2"); theme_set(theme_bw())
7	149	162	> ( p <- mp("x") * mp("x - .5") * mp("x -   1") ) # x(x-.5)(x-1)
7	149	178	x^3  -  1.5 x^2  +  0.5 x
7	149	195	> f <- as.function(p)
7	149	211	f(x)
7	149	228	> f
7	149	244	function(x){x**3  -   1.5 * x**2  +   0.5 * x}
7	149	261	<environment: 0x1218bc270>
7	149	277	> f(10)
7	149	293	[1] 855
7	149	310	> s <- seq(-.1, 1.1, length.out = 201)
7	149	326	> df <- data.frame(x = s, y = f(s))
7	149	343	> qplot(x, y, data = df, geom = "path") + geom_hline(yintercept = 0, colour = I("red"))
7	149	721	> mpoly <- mp("x + 3 x y + z^2 x")
7	149	738	>
7	149	754	> f <- as.function(mpoly)
7	149	771	f(.) with . = (x, y, z)
7	149	787	> f(1:3)
7	149	804	[1] 16
7	149	820	>
7	149	836	> f <- as.function(mpoly, vector = FALSE)
7	149	853	f(x, y, z)
7	149	869	> f(1, 2, 3)
7	149	886	[1] 16
7	149	953	> polys <- mp(c("x + 1", "y^2 + z"))
7	149	969	> f <- as.function(polys)
7	149	986	f(.) with . = (x, y, z)
7	149	1002	> f(1:3)
7	149	1018	[1] 2 7
7	149	1131	> f <- mp("1 - 2 x + x^2 + 100 x^4 - 200 x^2 y + 100 y^2")
7	149	1147	> f <- as.function(f)
8	149	104	> df <- expand.grid(x = seq(-2, 2, .01), y = seq(-1, 3, .01))
8	149	120	> df$f <- apply(df, 1, f)
8	149	137	> library("scales")
8	149	153	> qplot(x, y, data = df, geom = c("raster", "contour"),
8	149	169	+    fill = f + .001, z = f, colour = I("white"), bins = 6) +
8	149	186	+  scale_fill_gradient2(
8	149	202	+    low = "blue", mid = "green", high = "red",
8	149	219	+    trans = "log10", guide = "none"
8	149	235	+  )
page	left	top	code
1	149	955	> plot(mpg ~ disp, mtcars, pch = 16)
1	149	972	> library(gridGraphics)
1	149	988	> grid.echo()
2	149	403	grid.echo(), which produces the same scatterplot using the grid package.
2	149	511	> grid.ls()
2	149	527	graphics-plot-1-points-1
2	149	544	graphics-plot-1-bottom-axis-line-1
2	149	560	graphics-plot-1-bottom-axis-ticks-1
2	149	577	graphics-plot-1-bottom-axis-labels-1
2	149	593	graphics-plot-1-left-axis-line-1
2	149	609	graphics-plot-1-left-axis-ticks-1
2	149	626	graphics-plot-1-left-axis-labels-1
2	149	642	graphics-plot-1-box-1
2	149	659	graphics-plot-1-xlab-1
2	149	675	graphics-plot-1-ylab-1
2	149	797	> grid.edit("graphics-plot-1-bottom-axis-labels-1", rot = 45,
2	149	813	+           gp = gpar(col = "red"))
2	149	902	> coplot(lat ~ long | depth, quakes, pch = 16, cex = .5,
2	149	919	+        given.values = rbind(c(0, 400), c(300, 700)))
2	149	1111	> coplot(lat ~ long | depth, quakes, pch = 16, cex = .5,
2	149	1127	+        given.values = rbind(c(0, 400), c(300, 700)),
2	149	1144	+        bar.bg = c(num = "white"))
3	149	403	grid.echo() function, then edited using grid.edit().
3	149	926	> grid.echo(prefix = "cp")
3	149	1019	> grid.edit("cp-plot-4-box-1", gp = gpar(fill = "red"))
4	149	195	> gt <- grid.grab()
4	149	212	> gt <- reorderGrob(gt, "cp-plot-4-box-1")
4	149	228	> grid.newpage()
4	149	245	> grid.draw(gt)
4	149	1099	graphics-plot-1 viewport beneath both figure viewports, we can represent all possible values of the
4	149	1116	par("xpd") settings: clipping to the figure region, or clipping to the plot region, or no clipping at all.
5	149	917	downViewport() function to revisit the plot region viewport that was created by grid.echo() and
5	149	980	> downViewport("graphics-plot-1")
5	149	996	> grid.rect(gp = gpar(col = "red", lwd = 3))
5	149	1013	> upViewport(0)
6	149	547	> downViewport("cp-window-4-1")
6	149	563	> v <- unit(seq(0, 700, 100), "native")
6	149	580	> grid.segments(v, 0, v, 1, gp = gpar(col = "red"), name = "grid")
6	149	596	> upViewport(0)
7	149	100	> cpfun <- function() {
7	149	116	+     coplot(lat ~ long | depth, quakes, pch = 16, cex = .5,
7	149	133	+            given.values = rbind(c(0, 400), c(300, 700)))
7	149	149	+ }
7	149	165	> grid.newpage()
7	149	182	> pushViewport(viewport(y = 0, height = .7, just = "bottom"))
7	149	198	> grid.echo(cpfun, newpage = FALSE, prefix = "cp")
7	149	215	> upViewport()
7	149	320	> library(ggplot2)
7	149	336	> pushViewport(viewport(y = 1, height = .33, just = "top"))
7	149	353	> gg <- ggplot(quakes) + geom_bar(aes(x = depth)) +
7	149	369	+       theme(axis.title.x = element_blank())
7	149	386	> print(gg, newpage = FALSE)
7	149	402	> upViewport()
7	149	1078	> library(gridSVG)
7	149	1094	> plot(mpg ~ disp, mtcars, pch = 16)
7	149	1111	> grid.echo()
7	149	1127	> grid.garnish("graphics-plot-1-points-1", group = FALSE, title = rownames(mtcars))
7	149	1144	> grid.export("murrell-echo.svg")
8	149	843	<prefix>-plot-<i>-<label>-<j>
8	149	996	<prefix>-root
8	147	1012	<prefix>-inner<a>
8	147	1028	<prefix>-figure-<i><a>
8	147	1045	<prefix>-plot-<i><a>
8	147	1061	<prefix>-window-<i><a>-<j><b>
10	149	133	par("pin"). The <b> part is similar, but occurs when par("usr") is used to modify the axis scales.
10	149	609	grid.echo() cannot reproduce text labels on contours drawn by contour() and grid.echo() will
page	left	top	code
3	149	1109	> data(pop, package = "sparkTable")
4	149	228	> pop_ges <- pop$value[pop$variable == "Insgesamt"]
4	149	245	> sline <- newSparkLine(values = pop_ges)
4	149	261	> slineIQR <- newSparkLine(values = pop_ges, showIQR = TRUE)
4	149	460	outputType:
4	149	608	sline as a pdf-graphic with filename first-sl.pdf.
4	149	638	> export(object = sline, outputType = "pdf",
4	149	654	+   filename = file.path("figures", "first-sl"))
4	149	671	> export(object = slineIQR, outputType = "pdf",
4	149	687	+   filename = file.path("figures", "first-sl-IQR"))
4	149	801	> v1 <- as.numeric(table(rpois(50, 2))); v2 <- rnorm(50)
4	149	817	> sbar <- newSparkBar(values = v1, barSpacingPerc = 5)
4	149	833	> sbox <- newSparkBox(values = v2, boxCol = c("black", "darkblue"))
4	149	850	> shist <- newSparkHist(values = v2, barCol = c("black", "darkgreen", "black"))
4	149	866	> export(object = sbar, outputType = "pdf",
4	149	883	+   filename = file.path("figures", "first-bar"))
4	149	899	> export(object = sbox, outputType = "pdf",
4	149	916	+   filename = file.path("figures", "first-box"))
4	149	932	> export(object = shist, outputType = "pdf",
4	149	949	+   filename = file.path("figures", "first-hist"))
5	149	240	> sline2 <- setParameter(sline, type = "lineWidth", value = 2)
5	149	257	> sline2 <- setParameter(sline2, type = "pointWidth", value = 5)
5	149	273	> export(object = sline2, outputType = "pdf",
5	149	290	+   filename = file.path("figures", "second-sl"))
5	150	502	```{r, echo=TRUE}
5	150	518	require ( sparkTable )
5	150	535	sl <- newSparkLine ( values = rnorm (25) , lineWidth = .18 , pointWidth = .4,
5	166	551	  width = .4, height = .08)
5	150	567	export (sl , outputType = "png", filename = " sparkLine ")
5	150	584	```
5	150	600	This is a sparkline included in the ![ firstSparkLine ]( sparkLine .png)
5	150	617	text ...
5	149	1012	> # load data (in long format)
5	149	1028	> data(AT_Soccer, package = "sparkTable")
5	149	1045	> # first three observations to see the structure of the data
5	149	1061	> head(AT_Soccer, 3)
5	169	1091	   team time points wl goaldiff shotgoal getgoal
5	149	1108	1 Rapid    1      1 0        0        2       2
5	149	1124	2 Rapid    2      3 1        4        4       0
5	149	1140	3 Rapid    3      3 1        2        4       2
6	149	100	> # prepare content
6	149	116	> content <- list(
6	149	133	+     function(x) { sum(x) },
6	149	149	+     function(x) { round(sum(x), 2) },
6	149	165	+     function(x) { round(sum(x), 2) },
6	149	182	+     newSparkLine(lineWidth = 2, pointWidth = 6), newSparkBar()
6	149	198	+ )
6	149	215	> names(content) <- c("Points", "ShotGoal", "GetGoal", "GoalDiff", "WinLose")
6	149	231	>
6	149	248	> # set variables
6	149	264	> vars <- c("points", "shotgoal", "getgoal", "goaldiff", "wl")
6	149	281	>
6	149	297	> # create the sparkTable object
6	149	313	> stab <- newSparkTable(dataObj = AT_Soccer, tableContent = content, varType = vars)
6	149	597	> export(stab, outputType = "tex", filename = file.path("figures", "first-stab"),
6	149	614	+   graphNames = file.path("figures", "first-stab"))
7	149	224	> data(popEU, package = "sparkTable")
7	149	241	> data(debtEU, package = "sparkTable")
7	149	257	> data(coordsEU, package = "sparkTable")
7	149	274	> popEU <- popEU[popEU$country %in% coordsEU$country, ]
7	149	290	> debtEU <- debtEU[debtEU$country %in% coordsEU$country, ]
7	149	307	> EU <- cbind(popEU, debtEU[, -1])
7	149	323	> head(EU, 3)
7	163	351	  country    B1999    B2000    B2001    B2002    B2003    B2004    B2005
7	149	368	1      BE 10213752 10239085 10263414 10309725 10355844 10396421 10445852
7	149	384	2      BG 8230371 8190876 8149468 7891095 7845841 7801273 7761049
7	149	401	3      CZ 10289621 10278098 10266546 10206436 10203269 10211455 10220577
7	183	417	     B2006    B2007    B2008    B2009    B2010 X1999 X2000 X2001 X2002
7	149	434	1 10511382 10584534 10666866 10753080 10839905 113.7 107.9 106.6 103.5
7	149	450	2 7718750 7679290 7640238 7606551 7563710 77.6 72.5 66.0 52.4
7	149	467	3 10251079 10287189 10381130 10467542 10506813 16.4 18.5 24.9 28.2
7	163	483	  X2003 X2004 X2005 X2006 X2007 X2008 X2009 X2010
7	149	499	1 98.5 94.2 92.1 88.1 84.2 89.6 96.2 96.8
7	149	516	2 44.4 37.0 27.5 21.6 17.2 13.7 14.6 16.2
7	149	532	3 29.8 30.1 29.7 29.4 29.0 30.0 35.3 38.5
7	149	594	reshapeExt(), parameter idvar defines variables in long format that identify multiple records from
7	149	671	> EUlong <- reshapeExt(EU, idvar = "country", v.names = c("pop", "debt"),
7	149	688	+   varying = list(2:13, 14:25), geographicVar = "country", timeValues = 1999:2010)
7	149	704	> head(EUlong, 2)
7	149	733	$BE
7	190	749	      country time      pop debt
7	149	765	BE.1       BE 1999 10213752 113.7
7	149	782	BE.2       BE 2000 10239085 107.9
7	149	798	BE.3       BE 2001 10263414 106.6
7	149	815	BE.4       BE 2002 10309725 103.5
7	149	831	BE.5       BE 2003 10355844 98.5
7	149	848	BE.6       BE 2004 10396421 94.2
7	149	864	BE.7       BE 2005 10445852 92.1
7	149	880	BE.8       BE 2006 10511382 88.1
7	149	897	BE.9       BE 2007 10584534 84.2
7	149	913	BE.10      BE 2008 10666866 89.6
7	149	930	BE.11      BE 2009 10753080 96.2
7	149	946	BE.12      BE 2010 10839905 96.8
7	149	979	$BG
7	190	996	      country time     pop debt
7	149	1012	BG.1       BG 1999 8230371 77.6
7	149	1028	BG.2       BG 2000 8190876 72.5
7	149	1045	BG.3       BG 2001 8149468 66.0
7	149	1061	BG.4       BG 2002 7891095 52.4
7	149	1078	BG.5       BG 2003 7845841 44.4
7	149	1094	BG.6       BG 2004 7801273 37.0
7	149	1111	BG.7       BG 2005 7761049 27.5
7	149	1127	BG.8       BG 2006 7718750 21.6
7	149	1144	BG.9       BG 2007 7679290 17.2
8	149	711	BG.10      BG 2008 7640238 13.7
8	149	728	BG.11      BG 2009 7606551 14.6
8	149	744	BG.12      BG 2010 7563710 16.2
8	149	804	> l <- newSparkLine(lineWidth = 3, pointWidth = 10)
8	149	820	> content <- list(function(x) { "Population:" }, l, function(x) {"Debt:" }, l)
8	149	837	> varType <- c(rep("pop", 2), rep("debt", 2))
8	149	853	> xGeoEU <- newGeoTable(EUlong, content, varType, geographicVar = "country",
8	149	870	+   geographicInfo = coordsEU)
8	149	886	> export(xGeoEU, outputType = "tex", graphNames = file.path("figures", "out1"),
8	149	903	+   filename = file.path("figures", "testEUT"), transpose = TRUE)